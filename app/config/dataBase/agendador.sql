CREATE DATABASE agendador COLLATE "UTF8_GENERAL_CI";

-- Tablas

CREATE TABLE citas (
    CEDULA INT(11) PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR(250) NOT NULL,
    APELLIDO VARCHAR(250) NOT  NULL,
    TELEFONO VARCHAR(250) NOT NULL,
    DIRECCION VARCHAR(250) NOT NULL,
    CORREO VARCHAR(250) NOT NULL,
    ID_LABORATORIO INT(11) NOT NULL,
    FOREIGN KEY (ID_LABORATORIO) REFERENCES laboratories (ID),
    FECHA VARCHAR(250) NOT NULL,
    HORACITA TIME NOT NULL,
    COSTO_CITA VARCHAR(250)
);

CREATE TABLE emails (
    ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    CORREO VARCHAR(250) NOT NULL
);

CREATE TABLE laboratories (
    ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    LABORATORY VARCHAR(250) NOT NULL,
    STATUS BOOLEAN(1)
);

CREATE TABLE pqrs (
    CEDULA INT(11) PRIMARY KEY NOT NULL,
    NOMBRE_COMPLETO VARCHAR(250) NOT NULL,
    DESCRIPCION VARCHAR(250) NOT NULL
);

-- PROCESOS ALMACENADOS DE LA TABLA CITAS

-- INSERTA INFORMACION A LA TABLA CITAS

CREATE PROCEDURE `spInsertCita`(IN `_CEDULA` INT(11), IN `_NOMBRECOMPLETO` VARCHAR(150), IN `_TELEFONO` VARCHAR(150), IN `_DIRECCION` VARCHAR(200), IN `_LABORATORIO` VARCHAR(250), IN `_FECHA` VARCHAR(250), IN `_HORACITA` TIME, IN `_COSTOCITA` INT(250)) 
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    INSERT INTO citas (CEDULA, NOMBRECOMPLETO, TELEFONO, DIRECCION, LABORATORIO, FECHA, HORACITA, COSTOCITA) VALUES (_CEDULA, _NOMBRECOMPLETO, _TELEFONO, _DIRECCION, _LABORATORIO, _FECHA, _HORACITA, _COSTOCITA); 
END

CALL spInsertCita();

-- MUESTRA TODOS LOS DATOS DE LA TABLA CITAS

CREATE PROCEDURE `spFindAllCitas`() 
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    SELECT CEDULA, NOMBRECOMPLETO, TELEFONO, DIRECCION, LABORATORIO, FECHA, HORACITA, COSTOCITA FROM citas;
END

CALL spFindAllCitas();

-- MUESTRA LA INFORMACION POR MEDIO DEL ID

CREATE PROCEDURE `spFindCitas`(IN `_ID` INT(11)) 
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    SELECT ID, NOMBRECOMPLETO, TELEFONO, DIRECCION, LABORATORIO, FECHA, HORACITA, COSTOCITA FROM CITAS WHERE ID = _ID; 
END

CALL spFindCitas(1);

-- ACTUALIZAR INFORMACION DE LA TABLA

CREATE PROCEDURE `spUpdateCitas`(IN `_ID` INT(11), IN `_CEDULA` INT(11), IN `_NOMBRECOMPLETO` VARCHAR(150), IN `_TELEFONO` VARCHAR(150), IN `_DIRECCION` VARCHAR(200), IN `_LABORATORIO` VARCHAR(250), IN `_FECHA` VARCHAR(250), IN `_HORACITA` TIME, IN `_COSTOCITA` VARCHAR(250)) 
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER
BEGIN 
    UPDATE citas SET CEDULA = _CEDULA, NOMBRECOMPLETO = _NOMBRECOMPLETO, TELEFONO = _TELEFONO, DIRECCION = _DIRECCION, LABORATORIO = _LABORATORIO, FECHA = _FECHA, HORACITA = _HORACITA, COSTOCITA = _COSTOCITA WHERE ID = _ID; 
END

CALL spUpdateCitas();

-- ELIMINAR INFORMACION DE LA TABLA

CREATE PROCEDURE `spDeleteCitas`(IN `_ID` INT(11))
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER
BEGIN 
    DELETE FROM citas WHERE ID = _ID;
END

CALL spDeleteCitas(4);

-- PROCESOS ALMACENADOS DE LA TABLA EMAILS

-- INSERTAR INFORMACION
CREATE PROCEDURE `spInsertEmail`(IN `_email` VARCHAR(250))
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER
BEGIN
 INTO emails (email) VALUES (_email);
END

CALL spInsertEmail("digitar correo");

-- MUESTRA TODA LA INFORMACION DE LA TABLA
CREATE PROCEDURE `spFindAllEmail`()
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN
    SELECT ID, EMAIL FROM emails;
END

CALL spFindAllEmail();

--MUESTRA EL DATO SEGUN SU ID
CREATE PROCEDURE `spFindEmail`(IN `_ID` INT(11)) 
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN
    SELECT ID, EMAIL FROM emails WHERE ID = _ID;
END

CALL spFindEmail(1);

-- ACTUALIZAR INFORMACION
CREATE PROCEDURE `spUpdateEmail`(IN `_ID` INT(11), IN `_EMAIL` VARCHAR(250)) 
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    UPDATE emails SET EMAIL = _EMAIL WHERE ID = _ID; 
END

CALL spUpdateEmail();

-- ELIMINA LA INFORMACION SEGUN EL ID
CREATE PROCEDURE `spDeleteEmail`(IN `_ID` INT(11)) 
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER
BEGIN 
    DELETE FROM emails WHERE ID = _ID; 
END

CALL spDeleteEmail(1);